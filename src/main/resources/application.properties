#生产/开发等环境配置, 加载不同的配置文件
#spring.profiles.active = dev
#端口号
server.port=80
#配置访问项目路径
server.servlet.context-path=/

#解决中文乱码
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8


#数据库配置
#数据库连接地址
spring.datasource.url=jdbc:mysql://localhost:3306/kylin?useUnicode=true&useSSL=false&characterEncoding=utf8\
  &serverTimezone=Hongkong
#连接驱动类的名称(可以不写,6以上的使用cj包下的驱动)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#连接的用户名称
spring.datasource.username=root
#连接的用户密码
spring.datasource.password=root
#连接类型默认的(不写也是这个)
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#连接类型 druid
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#连接池
# 设置c3p0 数据源
#spring.datasource.type=com.mchange.v2.c3p0.ComboPooledDataSource
#设置DBCP 数据源
#spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource
#设置BoneCP数据源
#spring.datasource.type=com.jolbox.bonecp.BoneCPDataSource


#别名设置
mybatis-plus.type-aliases-package=com.caoyuan.xiao4.pervue.entity
#加载mapper映射文件
mybatis-plus.mapper-locations=classpath:mappers/*.xml
#日志输出
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#数据库储存枚举下标,使用注解@EnumValue//标记数据库存的值是code
mybatis-plus.configuration.default-enum-type-handler=org.apache.ibatis.type.EnumOrdinalTypeHandler
#配置type-enums-package只对注解方式的枚举处理能提前加载缓存,如果写@EnumValue注解了,必须开这个
mybatis-plus.typeEnumsPackage=com.caoyuan.xiao4.pervue.util
#驼峰下划线转换
mybatis-plus.global-config.db-config.column-underline=true
#刷新mapper 调试神器
mybatis-plus.global-config.refresh=true

#freemarker模板引擎
#加载的路径
spring.freemarker.template-loader-path=classpath:/templates/
#模板加载的后缀
spring.freemarker.suffix=.ftl
#页面不加载缓存
spring.freemarker.cache=false

#加入热部署的配置
spring.devtools.restart.enabled=true


## Redis部分
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1ms
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=5000



#加入kafka的配置
spring.kafka.bootstrap-servers=127.0.0.1:9092
#value序列化方式
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#es的配置
#连接的名称
#spring.data.elasticsearch.cluster-name=elasticsearch
##连接的es的地址
#spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300


# 静态文件请求匹配方式,下边是默认值
spring.mvc.static-path-pattern=/**
# 修改默认的静态寻址资源目录 多个使用逗号分隔,下边的是默认值,除了/pic/
spring.resources.static-locations = classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,classpath:/pic/


#上传配置
#单个文件上传的大小限制
spring.servlet.multipart.max-file-size=1MB
#一次请求限制大小
spring.servlet.multipart.max-request-size=10MB

#额外定义属性,下边是配置文件里的list写法 只用分隔符隔开就好
#usertypes=hello,two,three
#此注解放在要使用的类上边,比如controller
#@PropertySource("classpath:application.properties")
#下边就是注入的对象
#@Value("#{'${usertypes}'.split(',')}")
#private List<String> userTypes;



## Cache部分(下边配置不开也行,但是需要拷贝进RedisConfig.java)
##缓存的名称集合，多个采用逗号分割
#spring.cache.cache-names=
##缓存的类型，官方提供了很多，这里我们填写redis
#spring.cache.type=redis
##是否缓存null数据，默认是false
#spring.cache.redis.cache-null-values=false
##redis中缓存超时的时间，默认60000ms
#spring.cache.redis.time-to-live=60000
##缓存数据key是否使用前缀，默认是true
#spring.cache.redis.use-key-prefix=true
##缓存数据key的前缀，在上面的配置为true时有效，
#spring.cache.redis.key-prefix=
